import { EnhancedMircliVentilationParser } from './ventilation-parser-enhanced.js';

async function main() {
  console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...');
  
  const parser = new EnhancedMircliVentilationParser({
    delay: 3000,
    captchaTimeout: 60000,
    testMode: true
  });
  
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    await parser.init();
    
    console.log('üìÇ –ü–∞—Ä—Å–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    await parser.parseCategories();
    
    console.log('üì¶ –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤...');
    await parser.parseProducts();
    
    console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...');
    await parser.saveData();
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
    console.log(`   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${parser.categories.length}`);
    console.log(`   - –¢–æ–≤–∞—Ä–æ–≤: ${parser.products.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ:', error.message);
  } finally {
    await parser.close();
  }
}

main(); 