import { MircliProductsParser } from './mircli-products-parser.js';

async function main() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ mircli...');
  
  const parser = new MircliProductsParser({
    delay: 2000,
    captchaTimeout: 30000,
    testMode: true // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
  });

  try {
    await parser.run();
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
    console.log(`   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${parser.categories.length}`);
    console.log(`   - –¢–æ–≤–∞—Ä–æ–≤: ${parser.products.length}`);
    console.log(`   - –í—Ä–µ–º—è: ${new Date().toISOString()}`);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    if (parser.products.length > 0) {
      console.log('\nüì¶ –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤:');
      parser.products.slice(0, 3).forEach((product, index) => {
        console.log(`   ${index + 1}. ${product.name} - ${product.price} ‚ÇΩ`);
      });
    }
    
    if (parser.categories.length > 0) {
      console.log('\nüìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:');
      parser.categories.forEach((category, index) => {
        console.log(`   ${index + 1}. ${category.title} (${category.productCount} —Ç–æ–≤–∞—Ä–æ–≤)`);
      });
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–æ–≤–æ–º –ø–∞—Ä—Å–∏–Ω–≥–µ:', error.message);
    process.exit(1);
  }
}

main(); 